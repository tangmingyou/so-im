# sharding-jdbc 配置
# 配置数据源...launcher.properties

# 分表
#spring.shardingsphere.sharding.tables.im_user.actual-data-nodes=db1.im_user_$->{0..2}
## 指定im_user表的分片策略，分片策略包括分片键和分片算法
#spring.shardingsphere.sharding.tables.im_user.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.im_user.table-strategy.inline.algorithm-expression=im_user_$->{id % 3}

# 5.1.0 分表
# https://github.com/apache/shardingsphere/blob/master/examples/shardingsphere-jdbc-example/single-feature-example/sharding-example/sharding-raw-jdbc-example/src/main/resources/META-INF/sharding-tables.yaml

# 打开sharding-jdbc sql输出日志
spring.shardingsphere.props.sql-show=true
# 需要sharding处理的表
spring.shardingsphere.rules.sharding.binding-tables=im_user,im_friend,im_message
# im_user
spring.shardingsphere.rules.sharding.tables.im_user.actual-data-nodes=ds1.im_user_$->{0..3}
spring.shardingsphere.rules.sharding.tables.im_user.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.im_user.table-strategy.standard.sharding-algorithm-name=im-user-inline
spring.shardingsphere.rules.sharding.sharding-algorithms.im-user-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.im-user-inline.props.algorithm-expression=im_user_$->{id & 3}
# im_friend
spring.shardingsphere.rules.sharding.tables.im_friend.actual-data-nodes=ds1.im_friend_$->{0..7}
spring.shardingsphere.rules.sharding.tables.im_friend.table-strategy.standard.sharding-column=uid
spring.shardingsphere.rules.sharding.tables.im_friend.table-strategy.standard.sharding-algorithm-name=im-friend-inline
spring.shardingsphere.rules.sharding.sharding-algorithms.im-friend-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.im-friend-inline.props.algorithm-expression=im_friend_$->{uid & 7}
# im_message
spring.shardingsphere.rules.sharding.tables.im_message.actual-data-nodes=ds1.im_message_$->{0..7}
spring.shardingsphere.rules.sharding.tables.im_message.table-strategy.standard.sharding-column=friend_id
spring.shardingsphere.rules.sharding.tables.im_message.table-strategy.standard.sharding-algorithm-name=im-message-inline
spring.shardingsphere.rules.sharding.sharding-algorithms.im-message-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.im-message-inline.props.algorithm-expression=im_message_$->{friend_id & 7}
